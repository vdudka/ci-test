apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: demo-task
spec:
  params:
    # Git repo params
    - name: git-repo-url
      type: string
      default: https://github.com/vdudka/ci-test
      description: Git repo URL with code
    # Git utility image name
    - name: git-image
      type: string
      default: registry-1.docker.io/certascale/ci-tool:3.7.1
      description: Image with git and some other developers/build tools
    # Git repo home folder
    - name: git-home
      type: string
      default: demo-repo
      description: Home directory for git repo
    # Output registry params
    - name: registry-name
      type: string
      default: harbor-core.kube-system.svc.cluster.local/ci-test
      description: Registry name
    # Outgoing image name
    - name: image-name
      type: string
      default: tekton-demo
      description: Custom image name
    # Outgoing image tag
    - name: image-tag
      type: string
      default: v1
      description: Image tag

  steps:
  - name: git-clone
    image: $(params.git-image)
    workingDir: /workspace
    env:
      - name: GIT_URL
        value: $(params.git-repo-url)
      - name: GIT_HOME
        value: $(params.git-home)
    script: |
      #!/usr/bin/env bash
      [ -a ${GIT_HOME} ] && rm -rf ${GIT_HOME}
      mkdir -p ${GIT_HOME} && cd ${GIT_HOME}
      echo "Step git-clone"
      echo "Start cloning repo ${GIT_URL}"
      git clone "${GIT_URL}" .

  - name: create-config
    image: busybox
    workingDir: /workspace
    script: |
      #!/bin/sh
      echo "Step create-config"
      echo "Create docker config file for Harbor registry."
      mkdir -p /workspace/.docker/
      echo '{"auths": {"harbor-core.kube-system.svc.cluster.local":{"auth": "YWRtaW5AaGFyYm9yLmxvY2FsOkhhcmJvcjEyMzQ1"}}}' > /workspace/.docker/config.json

  - name: build-and-push
    image: gcr.io/kaniko-project/executor:v1.7.0
    workingDir: /workspace/
    env:
      - name: DOCKER_CONFIG
        value: /workspace/.docker
    command:
      - /kaniko/executor
      - --dockerfile=demo-repo/Dockerfile
      - --context=/workspace
      - --skip-tls-verify-pull
      - --skip-tls-verify
      - --destination=$(params.registry-name)/$(params.registry-name)/$(params.image-name):$(params.image-tag)
